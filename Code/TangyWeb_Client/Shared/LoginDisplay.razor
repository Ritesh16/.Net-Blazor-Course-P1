<form class="d-flex">
    <AuthorizeView>
        <Authorized>
            <ul class="navbar-nav">
                <li class="nav-item p-0">
                    <NavLink class="nav-link" href="/">
                        <span class="p-2">
                            Hello, @userName
                        </span>
                    </NavLink>
                </li>
                <li class="nav-item p-0">
                    <NavLink class="nav-link" href="/logout">
                        <span class="p-2">
                            Log out
                        </span>
                    </NavLink>
                </li>
            </ul>
        </Authorized>
        <NotAuthorized>
            <ul class="navbar-nav">
                <li class="nav-item p-0">
                    <NavLink class="nav-link" href="register">
                        <span class="p-2">
                            Register
                        </span>
                    </NavLink>
                </li>
                <li class="nav-item p-0">
                    <NavLink class="nav-link" href="login">
                        <span class="p-2">
                            Login
                        </span>
                    </NavLink>
                </li>
            </ul>
        </NotAuthorized>
    </AuthorizeView>
</form>


@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string userName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LogUserAuthenticationState();
    }

    private async Task LogUserAuthenticationState()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name;
        }
        else
        {
            Console.WriteLine("User is NOT authenticated.");
        }
    }
}