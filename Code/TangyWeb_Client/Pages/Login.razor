@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Login</h1>

<EditForm Model="loginModel" OnValidSubmit="SignIn">
    <DataAnnotationsValidator />
    <div class="py-4">
        <div class=" row form-group ">
            <div class="col-6 offset-3 ">
                <div class="card border">
                    <div class="card-body px-lg-5 pt-4">
                        <h3 class="col-12 text-success text-center py-2">
                            <strong>Sign In</strong>
                        </h3>
                        @if (ShowErrors)
                        {
                            <div class="alert alert-danger" role="alert">
                                <p>@Error</p>
                            </div>
                        }
                        <div class="py-2">
                            <InputText @bind-Value="loginModel.Email" id="email" placeholder="Email..." class="form-control mb-2" />
                            <ValidationMessage For="(()=>loginModel.Email)"></ValidationMessage>
                        </div>
                        <div class="py-2">
                            <InputText @bind-Value="loginModel.Password" type="password" placeholder="Password..." id="password" class="form-control mb-2" />
                            <ValidationMessage For="(()=>loginModel.Password)"></ValidationMessage>
                        </div>
                        <div class="py-2">
                            <button type="submit" class="btn btn-success btn-block"><i class="bi bi-person-bounding-box"></i> Sign in</button>
                            <a href="/register" class="btn btn-primary text-white m-2"><i class="bi bi-person-plus-fill"></i> Register as a new user</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {

    private LoginDto loginModel = new LoginDto();
    private bool ShowErrors;
    private string Error = "";

    private async Task SignIn()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}