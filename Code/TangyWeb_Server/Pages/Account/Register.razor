@page "/register"
@inject IAccountRepository _accountRepository

<h3 class="card-subtitle text-primary mb-3 ml-3">Register</h3>

@if (showErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Output.Errors)
        {
            <p>@error</p>
        }
    </div>
}

@if (Output.Successful)
{
    <div class="alert alert-success" role="alert">
        @Output.Message
    </div>
}

<div class="row my-2">
    <div class="col-10">
        @if (IsLoading)
        {
            <div style="text-align:center">
                <img src="images/loading.gif" />
            </div>
        }
        else
        {
            <EditForm Model="RegisterModel" OnValidSubmit="OnRegister">
                <DataAnnotationsValidator />
                @*<ValidationSummary/>*@
                <div class="form-group">
                    <label>First Name</label>
                    <InputText @bind-Value="RegisterModel.FirstName" class="form-control"></InputText>
                    <ValidationMessage For="()=>RegisterModel.FirstName"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Last Name</label>
                    <InputText @bind-Value="RegisterModel.LastName" class="form-control"></InputText>
                    <ValidationMessage For="()=>RegisterModel.LastName"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="RegisterModel.Email" class="form-control"></InputText>
                    <ValidationMessage For="()=>RegisterModel.Email"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="RegisterModel.Password" class="form-control" type="password"></InputText>
                    <ValidationMessage For="()=>RegisterModel.Password"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Confirm Password</label>
                    <InputText @bind-Value="RegisterModel.ConfirmPassword" class="form-control" type="password"></InputText>
                    <ValidationMessage For="()=>RegisterModel.ConfirmPassword"></ValidationMessage>
                </div>


                <div class="form-group py-2">
                    <button class="btn btn-primary">Save</button>
                    <NavLink href="/login" class="btn btn-secondary">Cancel</NavLink>
                </div>

            </EditForm>

        }
    </div>
</div>


@code {
    private RegisterDto RegisterModel { get; set; } = new();
    private OutputDto Output { get; set; } = new();
    private bool IsLoading { get; set; }

    private bool showErrors = false;

    private async Task OnRegister()
    {
        IsLoading = true;
        Output = await _accountRepository.Register(RegisterModel);

        if (Output.Successful)
        {
            showErrors = false;
            RegisterModel = new RegisterDto();
        }
        else
        {
            showErrors = true;
        }

        IsLoading = false;
    }

}
